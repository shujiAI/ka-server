apiVersion: v1
kind: PersistentVolume
metadata:
  name: shujiai-kaserver-onpremise-pv-volume
  labels:
    pv: shujiai-kaserver-onpremise-pv-volume
spec:
  storageClassName: manual
  capacity:
    storage: 50Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/home/onpremise/shujiai-kaserver"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: shujiai-kaserver-onpremise-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
  selector:
    matchLabels:
       pv: shujiai-kaserver-onpremise-pv-volume
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: onpremise-shujiai-kaserver
  namespace: default
  labels:
    k8s-app: onpremise-shujiai-kaserver
    app: onpremise-shujiai-kaserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: onpremise-shujiai-kaserver
  template:
    metadata:
      name: onpremise-shujiai-kaserver
      labels:
        app: onpremise-shujiai-kaserver
        k8s-app: onpremise-shujiai-kaserver
    spec:
      volumes:
        - name: shujiai-kaserver-logs-pv-storage
          persistentVolumeClaim:
            claimName: shujiai-kaserver-onpremise-pv-claim
      containers:
        - name: onpremise-shujiai-kaserver
          imagePullPolicy: IfNotPresent
          image: registry.cn-hangzhou.aliyuncs.com/shujiai/shujiai-kaserver:2.1.0-SNAPSHOT
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: onpremise
          lifecycle:
            preStop:
              exec:
                command: ["sleep", "60"]
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          securityContext:
            privileged: false
          volumeMounts:
            - name: shujiai-kaserver-logs-pv-storage
              mountPath: /home/admin/shujiai-kaserver
      restartPolicy: Always
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
      imagePullSecrets:
        - name: regcred
